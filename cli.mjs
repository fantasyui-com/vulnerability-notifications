#!/usr/bin/env node --experimental-modules --no-warnings

/*
 classification: PROGRAM
           name: Vulnerability Notifications
    description: Attempt to update npm packages marked by github as vulnerable
         author: Fantasy UI - https://github.com/fantasyui-com
*/

// Load Modules
import {inspect} from 'util';
import program from 'commander';
import path from 'path';
import fs from 'fs';

import helloWorld from './code_modules/hello-world';
import fixVulnerabilities from './code_modules/fix-vulnerabilities';

async function main(){

    // Hello World: Print &quot;Hello World&quot; and exit
    program
      .command('hello-world')
      .option('-b, --bork', 'Enable bork mode.')
      .option('-t, --text [value]', 'Text input')
      .action(async function (options) {
        const input = Object.entries(options).filter(([name])=>!name.startsWith('_')).filter(([name])=>!['commands', 'options', 'parent'].includes(name)).reduce((a,[k,v])=>({...a,[k]:v}),{})
        const helloWorldData = await helloWorld({context:{}, input:input});
    });
    // Fix Vulnerabilities: Attempt to fix npm-packages.
    program
      .command('fix-vulnerabilities')
      .option('-b, --bork', 'Enable bork mode.')
      .option('-t, --text [value]', 'Text input')
      .action(async function (options) {
        const input = Object.entries(options).filter(([name])=>!name.startsWith('_')).filter(([name])=>!['commands', 'options', 'parent'].includes(name)).reduce((a,[k,v])=>({...a,[k]:v}),{})
        const fixVulnerabilitiesData = await fixVulnerabilities({context:{}, input:input});
    });

  program.parse(process.argv)
}

main();
